#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The IDs of the screens for the screen types of the screen scheme. Only screens used in classic projects are accepted.

.PARAMETER Edit
The ID of the edit screen.
.PARAMETER Create
The ID of the create screen.
.PARAMETER View
The ID of the view screen.
.PARAMETER Default
The ID of the default screen. Required when creating a screen scheme.
.OUTPUTS

ScreenSchemeDetailsScreens<PSCustomObject>
#>

function Initialize-ScreenSchemeDetailsScreens {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Edit},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Create},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${View},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Default}
    )

    Process {
        'Creating PSCustomObject: PSJira => ScreenSchemeDetailsScreens' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "edit" = ${Edit}
            "create" = ${Create}
            "view" = ${View}
            "default" = ${Default}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ScreenSchemeDetailsScreens<PSCustomObject>

.DESCRIPTION

Convert from JSON to ScreenSchemeDetailsScreens<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ScreenSchemeDetailsScreens<PSCustomObject>
#>
function ConvertFrom-JsonToScreenSchemeDetailsScreens {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => ScreenSchemeDetailsScreens' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ScreenSchemeDetailsScreens
        $AllProperties = ("edit", "create", "view", "default")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "edit"))) { #optional property not found
            $Edit = $null
        } else {
            $Edit = $JsonParameters.PSobject.Properties["edit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "create"))) { #optional property not found
            $Create = $null
        } else {
            $Create = $JsonParameters.PSobject.Properties["create"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "view"))) { #optional property not found
            $View = $null
        } else {
            $View = $JsonParameters.PSobject.Properties["view"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "default"))) { #optional property not found
            $Default = $null
        } else {
            $Default = $JsonParameters.PSobject.Properties["default"].value
        }

        $PSO = [PSCustomObject]@{
            "edit" = ${Edit}
            "create" = ${Create}
            "view" = ${View}
            "default" = ${Default}
        }

        return $PSO
    }

}

