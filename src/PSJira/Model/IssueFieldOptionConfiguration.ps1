#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of the projects the option is available in.

.PARAMETER Scope
No description available.
.PARAMETER Attributes
DEPRECATED
.OUTPUTS

IssueFieldOptionConfiguration<PSCustomObject>
#>

function Initialize-IssueFieldOptionConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Scope},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("notSelectable", "defaultValue")]
        [String[]]
        ${Attributes}
    )

    Process {
        'Creating PSCustomObject: PSJira => IssueFieldOptionConfiguration' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "scope" = ${Scope}
            "attributes" = ${Attributes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IssueFieldOptionConfiguration<PSCustomObject>

.DESCRIPTION

Convert from JSON to IssueFieldOptionConfiguration<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IssueFieldOptionConfiguration<PSCustomObject>
#>
function ConvertFrom-JsonToIssueFieldOptionConfiguration {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => IssueFieldOptionConfiguration' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IssueFieldOptionConfiguration
        $AllProperties = ("scope", "attributes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "scope"))) { #optional property not found
            $Scope = $null
        } else {
            $Scope = $JsonParameters.PSobject.Properties["scope"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attributes"))) { #optional property not found
            $Attributes = $null
        } else {
            $Attributes = $JsonParameters.PSobject.Properties["attributes"].value
        }

        $PSO = [PSCustomObject]@{
            "scope" = ${Scope}
            "attributes" = ${Attributes}
        }

        return $PSO
    }

}

