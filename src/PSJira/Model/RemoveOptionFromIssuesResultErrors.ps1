#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned.

.PARAMETER Errors
The list of errors by parameter returned by the operation. For example,""projectKey"": ""Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.""
.PARAMETER ErrorMessages
The list of error messages produced by this operation. For example, ""input parameter 'key' must be provided""
.PARAMETER HttpStatusCode
No description available.
.OUTPUTS

RemoveOptionFromIssuesResultErrors<PSCustomObject>
#>

function Initialize-RemoveOptionFromIssuesResultErrors {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${Errors},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${ErrorMessages},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${HttpStatusCode}
    )

    Process {
        'Creating PSCustomObject: PSJira => RemoveOptionFromIssuesResultErrors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "errors" = ${Errors}
            "errorMessages" = ${ErrorMessages}
            "httpStatusCode" = ${HttpStatusCode}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RemoveOptionFromIssuesResultErrors<PSCustomObject>

.DESCRIPTION

Convert from JSON to RemoveOptionFromIssuesResultErrors<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RemoveOptionFromIssuesResultErrors<PSCustomObject>
#>
function ConvertFrom-JsonToRemoveOptionFromIssuesResultErrors {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => RemoveOptionFromIssuesResultErrors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RemoveOptionFromIssuesResultErrors
        $AllProperties = ("errors", "errorMessages", "httpStatusCode")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "errors"))) { #optional property not found
            $Errors = $null
        } else {
            $Errors = $JsonParameters.PSobject.Properties["errors"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "errorMessages"))) { #optional property not found
            $ErrorMessages = $null
        } else {
            $ErrorMessages = $JsonParameters.PSobject.Properties["errorMessages"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "httpStatusCode"))) { #optional property not found
            $HttpStatusCode = $null
        } else {
            $HttpStatusCode = $JsonParameters.PSobject.Properties["httpStatusCode"].value
        }

        $PSO = [PSCustomObject]@{
            "errors" = ${Errors}
            "errorMessages" = ${ErrorMessages}
            "httpStatusCode" = ${HttpStatusCode}
        }

        return $PSO
    }

}

