#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER StartAt
The index of the first item returned on the page.
.PARAMETER Total
Number of items that satisfy the search.
.PARAMETER IsLast
Whether this is the last page.
.PARAMETER MaxResults
The maximum number of items that could be returned.
.PARAMETER Values
The list of items.
.PARAMETER Self
The URL of this page.
.PARAMETER NextPage
The URL of the next page of results, if any.
.OUTPUTS

PageOfStatuses<PSCustomObject>
#>

function Initialize-PageOfStatuses {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${StartAt},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Total},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsLast},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxResults},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Values},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Self},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${NextPage}
    )

    Process {
        'Creating PSCustomObject: PSJira => PageOfStatuses' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "startAt" = ${StartAt}
            "total" = ${Total}
            "isLast" = ${IsLast}
            "maxResults" = ${MaxResults}
            "values" = ${Values}
            "self" = ${Self}
            "nextPage" = ${NextPage}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PageOfStatuses<PSCustomObject>

.DESCRIPTION

Convert from JSON to PageOfStatuses<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PageOfStatuses<PSCustomObject>
#>
function ConvertFrom-JsonToPageOfStatuses {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => PageOfStatuses' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PageOfStatuses
        $AllProperties = ("startAt", "total", "isLast", "maxResults", "values", "self", "nextPage")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startAt"))) { #optional property not found
            $StartAt = $null
        } else {
            $StartAt = $JsonParameters.PSobject.Properties["startAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "total"))) { #optional property not found
            $Total = $null
        } else {
            $Total = $JsonParameters.PSobject.Properties["total"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "isLast"))) { #optional property not found
            $IsLast = $null
        } else {
            $IsLast = $JsonParameters.PSobject.Properties["isLast"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxResults"))) { #optional property not found
            $MaxResults = $null
        } else {
            $MaxResults = $JsonParameters.PSobject.Properties["maxResults"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "values"))) { #optional property not found
            $Values = $null
        } else {
            $Values = $JsonParameters.PSobject.Properties["values"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "self"))) { #optional property not found
            $Self = $null
        } else {
            $Self = $JsonParameters.PSobject.Properties["self"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nextPage"))) { #optional property not found
            $NextPage = $null
        } else {
            $NextPage = $JsonParameters.PSobject.Properties["nextPage"].value
        }

        $PSO = [PSCustomObject]@{
            "startAt" = ${StartAt}
            "total" = ${Total}
            "isLast" = ${IsLast}
            "maxResults" = ${MaxResults}
            "values" = ${Values}
            "self" = ${Self}
            "nextPage" = ${NextPage}
        }

        return $PSO
    }

}

