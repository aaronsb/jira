#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of a custom field option to create.

.PARAMETER Value
The value of the custom field option.
.PARAMETER OptionId
For cascading options, the ID of the custom field object containing the cascading option.
.PARAMETER Disabled
Whether the option is disabled.
.OUTPUTS

CustomFieldOptionCreate<PSCustomObject>
#>

function Initialize-CustomFieldOptionCreate {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Value},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OptionId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Disabled}
    )

    Process {
        'Creating PSCustomObject: PSJira => CustomFieldOptionCreate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Value) {
            throw "invalid value for 'Value', 'Value' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "optionId" = ${OptionId}
            "disabled" = ${Disabled}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CustomFieldOptionCreate<PSCustomObject>

.DESCRIPTION

Convert from JSON to CustomFieldOptionCreate<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CustomFieldOptionCreate<PSCustomObject>
#>
function ConvertFrom-JsonToCustomFieldOptionCreate {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => CustomFieldOptionCreate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CustomFieldOptionCreate
        $AllProperties = ("value", "optionId", "disabled")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'value' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) {
            throw "Error! JSON cannot be serialized due to the required property 'value' missing."
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "optionId"))) { #optional property not found
            $OptionId = $null
        } else {
            $OptionId = $JsonParameters.PSobject.Properties["optionId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "disabled"))) { #optional property not found
            $Disabled = $null
        } else {
            $Disabled = $JsonParameters.PSobject.Properties["disabled"].value
        }

        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "optionId" = ${OptionId}
            "disabled" = ${Disabled}
        }

        return $PSO
    }

}

