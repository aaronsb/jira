#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A screen scheme.

.PARAMETER Id
The ID of the screen scheme.
.PARAMETER Name
The name of the screen scheme.
.PARAMETER Description
The description of the screen scheme.
.PARAMETER Screens
No description available.
.PARAMETER IssueTypeScreenSchemes
No description available.
.OUTPUTS

ScreenScheme<PSCustomObject>
#>

function Initialize-ScreenScheme {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Screens},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${IssueTypeScreenSchemes}
    )

    Process {
        'Creating PSCustomObject: PSJira => ScreenScheme' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "description" = ${Description}
            "screens" = ${Screens}
            "issueTypeScreenSchemes" = ${IssueTypeScreenSchemes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ScreenScheme<PSCustomObject>

.DESCRIPTION

Convert from JSON to ScreenScheme<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ScreenScheme<PSCustomObject>
#>
function ConvertFrom-JsonToScreenScheme {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => ScreenScheme' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ScreenScheme
        $AllProperties = ("id", "name", "description", "screens", "issueTypeScreenSchemes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "screens"))) { #optional property not found
            $Screens = $null
        } else {
            $Screens = $JsonParameters.PSobject.Properties["screens"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueTypeScreenSchemes"))) { #optional property not found
            $IssueTypeScreenSchemes = $null
        } else {
            $IssueTypeScreenSchemes = $JsonParameters.PSobject.Properties["issueTypeScreenSchemes"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "description" = ${Description}
            "screens" = ${Screens}
            "issueTypeScreenSchemes" = ${IssueTypeScreenSchemes}
        }

        return $PSO
    }

}

