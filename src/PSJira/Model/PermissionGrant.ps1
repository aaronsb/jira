#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details about a permission granted to a user or group.

.PARAMETER Id
The ID of the permission granted details.
.PARAMETER Self
The URL of the permission granted details.
.PARAMETER Holder
No description available.
.PARAMETER Permission
The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](../api-group-permission-schemes/#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.
.OUTPUTS

PermissionGrant<PSCustomObject>
#>

function Initialize-PermissionGrant {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Self},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Holder},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Permission}
    )

    Process {
        'Creating PSCustomObject: PSJira => PermissionGrant' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "self" = ${Self}
            "holder" = ${Holder}
            "permission" = ${Permission}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PermissionGrant<PSCustomObject>

.DESCRIPTION

Convert from JSON to PermissionGrant<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PermissionGrant<PSCustomObject>
#>
function ConvertFrom-JsonToPermissionGrant {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => PermissionGrant' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PermissionGrant
        $AllProperties = ("id", "self", "holder", "permission")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "self"))) { #optional property not found
            $Self = $null
        } else {
            $Self = $JsonParameters.PSobject.Properties["self"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "holder"))) { #optional property not found
            $Holder = $null
        } else {
            $Holder = $JsonParameters.PSobject.Properties["holder"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "permission"))) { #optional property not found
            $Permission = $null
        } else {
            $Permission = $JsonParameters.PSobject.Properties["permission"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "self" = ${Self}
            "holder" = ${Holder}
            "permission" = ${Permission}
        }

        return $PSO
    }

}

