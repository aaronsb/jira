#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of webhooks to register.

.PARAMETER Webhooks
A list of webhooks.
.PARAMETER Url
The URL that specifies where to send the webhooks. This URL must use the same base URL as the Connect app. Only a single URL per app is allowed to be registered.
.OUTPUTS

WebhookRegistrationDetails<PSCustomObject>
#>

function Initialize-WebhookRegistrationDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Webhooks},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Url}
    )

    Process {
        'Creating PSCustomObject: PSJira => WebhookRegistrationDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Webhooks) {
            throw "invalid value for 'Webhooks', 'Webhooks' cannot be null."
        }

        if ($null -eq $Url) {
            throw "invalid value for 'Url', 'Url' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "webhooks" = ${Webhooks}
            "url" = ${Url}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WebhookRegistrationDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to WebhookRegistrationDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WebhookRegistrationDetails<PSCustomObject>
#>
function ConvertFrom-JsonToWebhookRegistrationDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => WebhookRegistrationDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WebhookRegistrationDetails
        $AllProperties = ("webhooks", "url")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'webhooks' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "webhooks"))) {
            throw "Error! JSON cannot be serialized due to the required property 'webhooks' missing."
        } else {
            $Webhooks = $JsonParameters.PSobject.Properties["webhooks"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "url"))) {
            throw "Error! JSON cannot be serialized due to the required property 'url' missing."
        } else {
            $Url = $JsonParameters.PSobject.Properties["url"].value
        }

        $PSO = [PSCustomObject]@{
            "webhooks" = ${Webhooks}
            "url" = ${Url}
        }

        return $PSO
    }

}

